# Generated by Chef for <%= node['fqdn'] %>
#####################################################################
# IDO2DB DAEMON CONFIG FILE
#####################################################################



# LOCK FILE
# This is the lockfile that IDO2DB will use to store its PID number
# in when it is running in daemon mode.

lock_file=/var/run/ido2db.pid



# USER/GROUP PRIVILIGES
# These options determine the user/group that the daemon should run as.
# You can specify a number (uid/gid) or a name for either option.

ido2db_user=icinga
ido2db_group=icinga



# SOCKET TYPE
# This option determines what type of socket the daemon will create
# an accept connections from.
# Value:
#   unix = Unix domain socket (default)
#   tcp  = TCP socket

socket_type=unix
#socket_type=tcp



# SOCKET NAME
# This option determines the name and path of the UNIX domain
# socket that the daemon will create and accept connections from.
# This option is only valid if the socket type specified above
# is "unix".

socket_name=/var/spool/icinga/ido.sock



# TCP PORT
# This option determines what port the daemon will listen for
# connections on.  This option is only vlaid if the socket type
# specified above is "tcp".

tcp_port=5668



# ENCRYPTION
# This option determines if the ido2db daemon will accept SSL to encrypt the
# network traffic between module and ido2db daemon.
# Both sides have to enable this feature which depends on SSL Libraries
# like openssl or kerberos
# This option is only valid if the output type
# option specified above is "tcpsocket".
#
# A value of '1' will enable this feature

use_ssl=0



# DATABASE SERVER TYPE
# This option determines what type of DB server the daemon should
# connect to.
# Values:
# 	mysql    = MySQL
#	pgsql    = PostgreSQL
#	db2      = DB2
#	firebird = Firebird
#	freetds  = FreeTDS
#	ingres   = Ingres
#	msql     = MSSQL
#	oracle   = Oracle
#	sqlite   = SQLite
#	sqlite3  = SQLite3
# Currently supported:
#	libdbi: mysql, pgsql
#	ocilib: oracle


db_servertype=<%= node[:icinga][:ido2db][:servertype] %>



# DATABASE HOST
# This option specifies what host the DB server is running on.
# Note: Oracle will ignore this setting

db_host=<%= node[:icinga][:ido2db][:host] %>



# DATABASE PORT
# This option specifies the port that the DB server is running on.
# Values:
# 	3306 = Default MySQL port
#	5432 = Default PostgreSQL port
#       1521 = Default Oracle port
#
# Note: ocilib will ignore this, you have to modify your tnsnames.ora

db_port=<%= node[:icinga][:ido2db][:port] %>


# DATABASE SOCKET
# Optional db_socket allows to specify a different socket location.
# This will be passed to libdbi MySQL as mysql_unix_socket, while
# PostgeSQL overrides the port, ocilib Oracle ignores this setting.
#
# Note: This setting overrules db_port, making it useless!

#db_socket=/var/lib/mysql/mysql.sock



# DATABASE NAME
# This option specifies the name of the database that should be used.
#
# Note: Oracle with ocilib requires tnsnames.ora filled with host, port
# and database information. you can use the SID then with ocilib and
# one of the following:
# 	//DBSERVER/SID
#	SID

db_name=<%= node[:icinga][:ido2db][:dbname] %>



# DATABASE TABLE PREFIX
# Determines the prefix (if any) that should be prepended to table names.
# If you modify the table prefix, you'll need to modify the SQL script for
# creating the database!
#
# Note: Oracle will ignore this prefix since the tablename length will exceed
# 30 characters.

db_prefix=<%= node[:icinga][:ido2db][:prefix] %>



# DATABASE USERNAME/PASSWORD
# This is the username/password that will be used to authenticate to the DB.
# The user needs at least SELECT, INSERT, UPDATE, and DELETE privileges on
# the database.

db_user=<%= node[:icinga][:ido2db][:user] %>
db_pass=<%= node[:icinga][:ido2db][:password] %>


# MAX DEBUG FILE SIZE
# This option determines the maximum size (in bytes) of the debug file.  If
# the file grows larger than this size, it will be renamed with a .old
# extension.  If a file already exists with a .old extension it will
# automatically be deleted.  This helps ensure your disk space usage doesn't
# get out of control when debugging.

# 100M
max_debug_file_size=100000000



# DEBUG READABLE TIMESTAMP
# This option will allow you to set a readable timestamp instead of the
# default unix timestamp.
# Values: 0 = disabled, 1 = enabled

debug_readable_timestamp=0



# OCI ERRORS TO SYSLOG
# ido2db registers an error handler in ocilib which spits all msg
# into debug and syslog by default. Setting this option to 0,
# syslog output will be disabled, only debug log will be used (if
# appropriate debug_level is set).

oci_errors_to_syslog=1



# ORACLE TRACE LEVEL
# This setting activates oracle session trace for each ido2db connection using trace event
# Level value must be one of the currently supported values (1,4,8,12) or 0 for off 
# this requires explicit "alter session" privilege
# select rights to v$session and v$process are recommanded
# 0 - pseudo level TRACE OFF
# 1 – standard SQL trace, no wait events, or bind variables.
# 4 – Bind variables only
# 8 – Wait events only
# 12 – Bind Variables and Wait Events

oracle_trace_level=0



# ENABLE SLA - EXPERIMENTAL!
# This setting enables collection of SLA data in the slahistory table
# Values: 0 = disabled, 1 = enabled
#
# WARNING: This setting is highly experimantal and may harm your
# systems performance. Enable at your own risk, and if any problems
# occur, remark that you are explicitely using it. You've been warned.

enable_sla=0
